name: terraform-force-unlock
on:
  workflow_dispatch:
    inputs:
      workspace:
        description: "Workspace of terraform changes"
        required: false
        type: string
        default: "hotfix-kosana"
      bucket_name:
        description: "Bucket name where s3 backend is"
        required: false
        type: string
        default: "aws-glue-terraform-state-kspr"
      prefix_key:
        description: "prefix key where the terraform.tfstate is saved "
        required: false
        type: string
        default: "lambda-tf-workspaces-cicd/workspaces/terraform.tfstate"
      dynamodb_table:
        description: "Dynamodb Table name "
        required: false
        type: string
        default: "eks-terraform"



permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  unlock:
    name: unlock-check
    runs-on: ubuntu-24.04-arm
    environment: "${{ github.ref_name == 'main' && 'production' || 'development' }}"
    steps:
      - name: Checkout repository
        id: clone-repo
        uses: actions/checkout@v3
      - name: Configure AWS credentials via OIDC
        id: aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.aws_iam_role }}
          role-session-name: GitHub-Role-${{ github.run_id }}
          aws-region: ${{ vars.aws_region }}
      - name: Terraform Destroy
        working-directory: terraform
        env:
            
            BUCKET_NAME: ${{ inputs.bucket_name }}
            PREFIX_KEY: ${{ inputs.prefix_key }}
            DYNAMODB_TABLE: ${{ inputs.dynamodb_table }}
            WORKSPACE: ${{ inputs.workspace }}
        run: |
          LOCK_ID="$BUCKET_NAME/env:/$WORKSPACE/$PREFIX_KEY"
          echo "Lock id: $LOCK_ID"
          echo aws dynamodb delete-item --table-name ''"${DYNAMODB_TABLE}"'' --key '{"LockID": {"S": ''"$LOCK_ID"''}}'
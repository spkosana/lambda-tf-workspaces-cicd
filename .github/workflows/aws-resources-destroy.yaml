name: aws-resources-destroy

on:
  workflow_call:
    inputs:
      destroy_env:
        description: "Destroy the environment resources"
        required: true
        type: boolean
        default: false
  workflow_dispatch:
    inputs:
      destroy_env:
        description: 'Destroy resources'
        required: true
        type: boolean
        default: false

permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  set-up-flag:
    name: setup-flag
    runs-on: ubuntu-24.04-arm
    outputs:
      destroy_env_flag: ${{ steps.assign-flag.outputs.destroy_env_flag }}
    steps:
      - name: Debug logging
        id: assign-flag
        env:
          TF_FLAG: ${{ inputs.destroy_env }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        run: |
          WORKSPACE=$(echo $BRANCH_NAME | cut -d'-' -f2)
          echo $WORKSPACE
          echo $TF_FLAG
          if [[ "$WORKSPACE" == "main" || "$WORKSPACE" == "develop" ]]; then
              echo "destroy_env_flag=false" >> $GITHUB_OUTPUT
          else
              echo "destroy_env_flag=$TF_FLAG" >> $GITHUB_OUTPUT
          fi
          echo "Exting the pipeline due to branch being $WORKSPACE"
  common:
    needs: set-up-flag
    if: ${{ needs.set-up-flag.outputs.destroy_env_flag == 'true' }}
    # Reuse the compile workflow (can even point to another repo, see the docs)
    uses: ./.github/workflows/workspace-tf-plan.yaml
  destroy:
    name: destroy-check
    needs: common
    runs-on: ubuntu-24.04-arm
    environment: ${{ needs.common.outputs.environment }}
    steps:
      - name: Checkout repository
        id: checkout-repository
        uses: actions/checkout@v3
      - name: Setup Terraform
        id: setup-terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3
      - name: Configure AWS credentials via OIDC
        id: aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.aws_iam_role }}
          role-session-name: GitHub-Role-${{ github.run_id }}
          aws-region: ${{ vars.aws_region }}
      - name: Download Terraform Plan Artifact
        id: download-artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.common.outputs.artifcat_name }}
          path: terraform # Download to current directory
          run-id: ${{ github.run_id }}
          github-token: ${{ github.token }}
          repository: ${{ github.repository }}
      - name: Terraform Destroy
        working-directory: terraform
        env:
          TF_WORKSPACE_ENV: ${{ needs.common.outputs.tf_workspace }}
          VARS_FILE: ${{ needs.common.outputs.vars_file }}
        run: |
          echo "Using the workspace: $TF_WORKSPACE_ENV"
          echo "Using the vars file: $VARS_FILE"
          echo "Using the vars file: ${{ needs.common.outputs.vars_file }}"
          terraform init
          terraform workspace select ${{ needs.common.outputs.tf_workspace }}
          terraform destroy -auto-approve -lock=false -var-file="$VARS_FILE"
          terraform workspace select default
          terraform workspace delete ${{ needs.common.outputs.tf_workspace }} -lock=false
          terraform workspace list
